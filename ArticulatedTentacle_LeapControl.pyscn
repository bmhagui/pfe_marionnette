# -*- coding: utf-8 -*-

import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/Jonathan/'
trackingPath = os.path.dirname(os.path.abspath(__file__))+'/tracking/Tentacle/'


def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('VisualStyle', displayFlags="showVisualModels showBehaviorModels showCollisionModels \
                                        hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe")

                rootNode.createObject('FreeMotionAnimationLoop')

                rootNode.createObject('QPInverseProblemSolver', printLog='0', epsilon="3e1", alpha="3e3", displayTime="1",\
                maxIterations="250", tolerance="1e-12")

                rootNode.createObject('BackgroundSetting', color='0. 0. 0.')
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")
                rootNode.findData('gravity').value="0 0 -9810"
                rootNode.findData('dt').value=0.01


                rootNode.createObject('PythonScriptController', classname="controller", filename=trackingPath+"controller.py")


                ##########################################
                # Effector goal for interactive control  #
                ##########################################
                goal = rootNode.createChild('goal')
                goal.createObject('MechanicalObject', name='goalMO',
                        position='158 0 -94   142.853 0 -72.0935    111.516 0 -20.6461',
                        showObject="1",
                        showObjectScale="5",
                        drawMode="1")


                ##########################################
                # FEM Model                              #
                ##########################################
                tentacle = rootNode.createChild('tentacle')
                tentacle.createObject('EulerImplicit', firstOrder='0', rayleighMass="0.1", rayleighStiffness="0.1")
                tentacle.createObject('SparseLDLSolver')

                tentacle.createObject('MeshVTKLoader', name='loader', filename=path+'Tentacle_Articulated_Tetra.vtk')
                tentacle.createObject('TetrahedronSetTopologyContainer', src='@loader')
                tentacle.createObject('TetrahedronSetTopologyModifier')
                tentacle.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
                tentacle.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')

                tentacle.createObject('MechanicalObject', name='tetras', template='Vec3d')
                tentacle.createObject('UniformMass', totalmass='0.025')
                tentacle.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='100')

                tentacle.createObject('BoxROI', name='ROI1', box='50 -20 30    75 20 50', drawBoxes='true')
                # tentacle.createObject('RestShapeSpringsForceField', points='@ROI1.indices', stiffness='1e12')
                tentacle.createObject('FixedConstraint', indices='@ROI1.indices')

                tentacle.createObject('LinearSolverConstraintCorrection')


                ##########################################
                # Effector                               #
                ##########################################

                effector = tentacle.createChild('effector')
                effector.createObject('MechanicalObject', name="effectorPoint",
                        position=("158 0 -94   142.853 0 -72.0935   111.516 0 -20.6461"))
                effector.createObject('PositionEffector', template='Vec3d',
                        indices="0 1 2",
                        effectorGoal="@../../goal/goalMO.position",
                        axis="1 0 1")
                effector.createObject('BarycentricMapping', mapForces="false", mapMasses="false")


                ##########################################
                # Actuator                               #
                ##########################################

                actuator = tentacle.createChild('actuator')
                actuator.createObject('MechanicalObject', name="actuatorPoint",
                        position=(
                                        "48.2737 0  24.5372 "+
                                        "65.9662 0  14.5481 "+
                                        "70.5244 0  11.8775 "+
                                        "82.0908 0  6.00442 "+
                                        "84.7668 0  4.42029 "+
                                        "96.343  0 -4.22773 "+
                                        "101.041 0 -7.67323 "+
                                        "111.516 0 -20.6461 "+
                                        "114.192 0 -23.2302 "+
                                        "124.024 0 -36.2552 "+
                                        "125.817 0 -39.7529 "+
                                        "133.884 0 -54.605  "+
                                        "135.678 0 -58.1027 "+
                                        "142.853 0 -72.0935 "+
                                        "143.755 0 -74.7298 "+
                                        "158.056 0 -93.8366 "+
                                        "158.056 0 -95"))
                actuator.createObject('CableActuator', template='Vec3d',
                        name="cable",
                        indices=[0-14],
                        pullPoint="40 0 24.5372",
                        maxPositiveDisp="35",
                        maxDispVariation="5",
                        minForce="0"
                        )
                actuator.createObject('BarycentricMapping', mapForces="false", mapMasses="false")


                ##########################################
                # Visualization                          #
                ##########################################
                tentacleVisu = tentacle.createChild('visu')
                tentacleVisu.createObject('OglModel', filename=path+"Tentacle_Articulated_Hexa.stl", template='ExtVec3f', color="0.0 0.7 0.7")
                tentacleVisu.createObject('BarycentricMapping')


                ##########################################
                # Contact                                #
                ##########################################

                tentacleContact = tentacle.createChild('contact')
                tentacleContact.createObject('MechanicalObject',
                        position="64 0 11   69 7 8     69 -7 8     71 0 17 "+
                                 "107 0 -23   111 7 -27     111 -7 -27    117 0 -17 "+
                                 "93 0 -7.5   97 7 -11     97 -7 -11    102 0 -0.5 "+
                                 "138 0 -73   141 7 -77     141 -7 -77     146 0 -72 "+
                                 "78 0 3     83 7 0    83 -7 0    86 0 9   "+
                                 "118 0 -38   122 6.7 -42     122 -7 -42   129 -0.2 -35  "+
                                 "129.5 0 -55.5    132 7 -60    132.5 -7 -59.6   138 0 -53.5")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="0 1 2 3")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="4 5 6 7")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="8 9 10 11")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="12 13 14 15")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="16 17 18 19")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="20 21 22 23")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="24 25 26 27")
                tentacleContact.createObject('BarycentricMapping')


                return rootNode
