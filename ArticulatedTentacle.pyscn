# -*- coding: utf-8 -*-

import Sofa

import os
path = os.path.dirname(os.path.abspath(__file__))+'/mesh/Jonathan/'

meshRobotVisuOBJ = path+'Tentacle_Articulated.obj'
cycloVisu = path+'Tentacle_Cyclo.obj'
textureTentacle = path+'Tentacle_Articulated_Diffuse_Map.png'
textureCyclo = path+'Cyclo_Diffuse_Map.png'

def createScene(rootNode):

                rootNode.createObject('RequiredPlugin', pluginName='SoftRobots')
                rootNode.createObject('VisualStyle', displayFlags="showVisualModels hideBehaviorModels hideCollisionModels \
                                        hideBoundingCollisionModels hideForceFields showInteractionForceFields hideWireframe")

                rootNode.createObject('FreeMotionAnimationLoop')

                rootNode.createObject('QPInverseProblemSolver', printLog='0', epsilon="1e-1", displayTime="1", maxIterations="1000", tolerance="1e-12")

                rootNode.createObject('BackgroundSetting', color='0 0.168627 0.211765')
                rootNode.createObject('OglSceneFrame', style="Arrows", alignment="TopRight")
                rootNode.findData('gravity').value="0 -9810 0"
                rootNode.findData('dt').value=0.01


                ##########################################
                # Serial Port                            #
                ##########################################
                # rootNode.createObject('PythonScriptController', classname="controller", filename=path+"../../controller/TentacleController.py")
                # rootNode.createObject('SerialPortBridgeGeneric', name="serial", port="/dev/ttyACM0", baudRate="115200", size="1", listening="true")


                ##########################################
                # Effector goal for interactive control  #
                ##########################################
                goal = rootNode.createChild('goal')
                goal.createObject('EulerImplicit', firstOrder='1')
                goal.createObject('CGLinearSolver', iterations='100', tolerance="1e-5", threshold="1e-5")
                goal.createObject('MechanicalObject', name='goalMO',
                        position='250 0 30',
                        showObject="1",
                        showObjectScale="5",
                        drawMode="1")
                goal.createObject('AnimationEditor', filename="trajectory/TentacleAnimation.txt", listening="1")
                goal.createObject('UncoupledConstraintCorrection')


                ##########################################
                # FEM Model                              #
                ##########################################
                tentacle = rootNode.createChild('tentacle')
                tentacle.createObject('EulerImplicit', firstOrder='0', rayleighMass="0.1", rayleighStiffness="0.1")
                tentacle.createObject('ShewchukPCGLinearSolver', iterations='15', name='linearsolver', tolerance='1e-8',
                    preconditioners='precond', use_precond='true', update_step='1')

                tentacle.createObject('MeshVTKLoader', name='loader', filename=path+'Tentacle_Articulated_Tetra.vtk',
                    scale3d="0.8 0.8 0.8", rotation="0 -44 0", translation="77 0 -7")
                tentacle.createObject('TetrahedronSetTopologyContainer', src='@loader')
                tentacle.createObject('TetrahedronSetTopologyModifier')
                tentacle.createObject('TetrahedronSetTopologyAlgorithms', template='Vec3d')
                tentacle.createObject('TetrahedronSetGeometryAlgorithms', template='Vec3d')

                tentacle.createObject('MechanicalObject', name='tetras', template='Vec3d')
                tentacle.createObject('UniformMass', totalmass='0.0135')
                tentacle.createObject('TetrahedronFEMForceField', template='Vec3d', name='FEM', method='large', poissonRatio='0.3',  youngModulus='50')
                # tentacle.createObject('PipeForceField', barycentricMapping="@pipes/BM", mappedForceField="@pipes/FF")

                tentacle.createObject('BoxROI', name='ROI1', box='70 -20 0    95 20 50', drawBoxes='true')
                tentacle.createObject('RestShapeSpringsForceField', points='@ROI1.indices', stiffness='1e12')
                # tentacle.createObject('FixedConstraint', indices='@ROI1.indices')


                tentacle.createObject('SparseLDLSolver', name="precond")
                tentacle.createObject('LinearSolverConstraintCorrection', solverName="precond")


                ##########################################
                # Effector                               #
                ##########################################

                effector = tentacle.createChild('effector')
                effector.createObject('MechanicalObject', name="effectorPoint",
                        position=("225 0 27"))
                effector.createObject('PositionEffector', template='Vec3d',
                        indices="0",
                        effectorGoal="@../../goal/goalMO.position",
                        axis="1 1 0")
                effector.createObject('BarycentricMapping', mapForces="false", mapMasses="false")


                ##########################################
                # Actuator                               #
                ##########################################

                actuator = tentacle.createChild('actuator')
                actuator.createObject('MechanicalObject', name="actuatorPoint",
                        position=(
                                        "49   -0.2  22   "+
                                        "58   -0.2  18   "+
                                        "67.5 -0.22 14   "+
                                        "70.  -0.2  12.5 "+
                                        "82.  -0.2  6.   "+
                                        "84.5 -0.2  4.5  "+

                                        "97.7  -0.2 -3.5  "+
                                        "99.7  -0.2 -6    "+
                                        "112.5 -0.2 -20   "+
                                        "114.4 -0.2 -22   "+
                                        "123.5 -0.2 -36.5 "+

                                        "125.5 -0.2 -38.5 "+
                                        "133.7 -0.2 -54.5 "+
                                        "135   -0.2 -56.5 "+
                                        "142.2 -0.2 -72.4 "+
                                        "143.6 -0.2 -74.7 "+

                                        "162 -0.2 -97"),
                                        scale3d="0.8 0.8 0.8", rotation="0 -44 0", translation="77 0 -7")
                actuator.createObject('CableActuator', template='Vec3d',
                        name="cable",
                        indices=range(0,17),
                        pullPoint="-20 15 -20",
                        minForce="0",
                        maxPositiveDisp="25",
                        maxDispVariation="1"
                        )
                actuator.createObject('BarycentricMapping', mapForces="false", mapMasses="false")


                ##########################################
                # Pipes                                  #
                ##########################################

                pipes = tentacle.createChild('pipes')
                pipes.createObject('EdgeSetTopologyContainer',
                    position=           "49   -0.2  22   "+
                                        "67.5 -0.2  14   "+
                                        "70.  -0.2  12.5 "+
                                        "82.  -0.2  6.   "+
                                        "84.5 -0.2  4.5  "+

                                        "97.7  -0.2 -3.5  "+
                                        "99.7  -0.2 -6    "+
                                        "112.5 -0.2 -20   "+
                                        "114.4 -0.2 -22   "+
                                        "123.5 -0.2 -36.5 "+

                                        "125.5 -0.2 -38.5 "+
                                        "133.7 -0.2 -54.5 "+
                                        "135   -0.2 -56.5 "+
                                        "142.2 -0.2 -72.4 "+
                                        "143.6 -0.2 -74.7 "+

                                        "162 -0.2 -97",
                    edges="0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15")
                pipes.createObject('MechanicalObject', name="pipesMO", scale3d="0.8 0.8 0.8", rotation="0 -44 0", translation="77 0 -7")
                pipes.createObject('UniformMass', totalmass="0.003")
                pipes.createObject('MeshSpringForceField', stiffness="1.5e2", damping="0", name="FF")
                pipes.createObject('BarycentricMapping', name="BM")


                ##########################################
                # Visualization                          #
                ##########################################
                tentacleVisu = tentacle.createChild('visu')
                tentacleVisu.createObject('OglModel', filename=path+"Tentacle_Articulated.obj", template='ExtVec3f', color="0.0 0.75 0.8")
                tentacleVisu.createObject('BarycentricMapping')

                supportVisu = rootNode.createChild('supportVisu')
                supportVisu.createObject('OglModel', filename=path+"support.stl", template='ExtVec3f',
                 color="0.7 0.7 0.7", rotation="0 150 0", translation="88 15 45")
                #
                # holderVisu = rootNode.createChild('holderVisu')
                # holderVisu.createObject('OglModel', filename=path+"tentacleholder.stl", template='ExtVec3f',
                #  color="0.7 0.7 0.7", rotation="0 -30 0", translation="140 -5 28")

                # tentacleVisu.createObject('OglModel', putOnlyTexCoords='true', fileMesh=meshRobotVisuOBJ, name='Tentacle', normals='0')
                # tentacleVisu.createObject('OglShader', fileVertexShaders='shaders/shaderLibrary.glsl', fileFragmentShaders='shaders/shaderLibrary.glsl')
                # tentacleVisu.createObject('OglFloat3Variable', name='AmbientColor', value='0.4 0.4 0.4')
                # tentacleVisu.createObject('OglFloat3Variable', name='DiffuseColor', value='1.0 1.0 1.0')
                # tentacleVisu.createObject('OglFloat3Variable', name='SpecularColor', value='0.2 0.2 0.2')
                # tentacleVisu.createObject('OglFloatVariable', name='SpecularRoughness', value='0.25')
                # tentacleVisu.createObject('OglFloatVariable', name='SpecularReflectance', value='0.05')
                # tentacleVisu.createObject('OglFloat3Variable', name='LightColor', value='1 1 1')
                # tentacleVisu.createObject('OglFloat3Variable', name='LightPosition', value='-200 100 -300')
                # tentacleVisu.createObject('OglFloat3Variable', name='LightDirection', value='1 0 1')
                # tentacleVisu.createObject('OglShaderDefineMacro', id='DiffuseMap_Present')
                # tentacleVisu.createObject('OglTexture', textureUnit='1', repeat='true', name='color', srgbColorspace='false', id='DiffuseMap', textureFilename=textureTentacle)
                # tentacleVisu.createObject('BarycentricMapping')
                #
                # Environment = rootNode.createChild('Environment')
                # Environment.createObject('OglModel', putOnlyTexCoords='true', fileMesh=cycloVisu, rotation="-90 150 0", translation="150 -20 50")
                # Environment.createObject('OglShader', fileVertexShaders='shaders/shaderLibrary.glsl', fileFragmentShaders='shaders/shaderLibrary.glsl')
                # Environment.createObject('OglFloat3Variable', name='AmbientColor', value='1.0 1.0 1.0')
                # Environment.createObject('OglFloat3Variable', name='DiffuseColor', value='0.8 0.8 0.8')
                # Environment.createObject('OglFloat3Variable', name='SpecularColor', value='1 1 1')
                # Environment.createObject('OglFloatVariable', name='SpecularRoughness', value='0.25')
                # Environment.createObject('OglFloatVariable', name='SpecularReflectance', value='0.05')
                # Environment.createObject('OglShaderDefineMacro', id='DiffuseMap_Present')
                # Environment.createObject('OglTexture', textureUnit='2', repeat='true', name='color', srgbColorspace='false', id='DiffuseMap', textureFilename=textureCyclo)


                ##########################################
                # Contact                                #
                ##########################################

                tentacleContact = tentacle.createChild('contact')
                tentacleContact.createObject('MechanicalObject',
                        position="64 0 11   69 7 8     69 -7 8     71 0 17 "+
                                 "107 0 -23   111 7 -27     111 -7 -27    117 0 -17 "+
                                 "93 0 -7.5   97 7 -11     97 -7 -11    102 0 -0.5 "+
                                 "138 0 -73   141 7 -77     141 -7 -77     146 0 -72 "+
                                 "78 0 3     83 7 0    83 -7 0    86 0 9   "+
                                 "118 0 -38   122 6.7 -42     122 -7 -42   129 -0.2 -35  "+
                                 "129.5 0 -55.5    132 7 -60    132.5 -7 -59.6   138 0 -53.5",
                                 scale3d="0.8 0.8 0.8", rotation="0 -44 0", translation="77 0 -7")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="0 1 2 3")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="4 5 6 7")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="8 9 10 11")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="12 13 14 15")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="16 17 18 19")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="20 21 22 23")
                tentacleContact.createObject('UnilateralPlaneConstraint', indices="24 25 26 27")
                tentacleContact.createObject('BarycentricMapping')


                return rootNode
